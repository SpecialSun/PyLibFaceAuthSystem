# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 't2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import qtawesome
import os
import sys
import pandas as pd
import img
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QTableWidgetItem, QTableWidget, QDialog
from util import UserSqlUtil
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon
from ui.photo_selection_ui import ImgUi


class TableUi(object):
    def __init__(self):
        self.all_list = []
        self.isSearch_flag = 0
        self.hasModify_flag = 0
        self.sid = None
        self.name = None
        self.password = None
        self.age = None
        self.sex = None
        self.more = None

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1220, 888)
        self.main_frame = QtWidgets.QFrame(Dialog)
        self.main_frame.setGeometry(QtCore.QRect(10, 10, 1200, 860))
        self.main_frame.setMinimumSize(QtCore.QSize(1200, 860))
        self.main_frame.setStyleSheet("\n"
                                      "#main_frame{\n"
                                      "background:#ffffff;\n"
                                      "border-top-left-radius:7px;\n"
                                      "border-top-right-radius:7px;\n"
                                      "border-bottom-left-radius:7px;\n"
                                      "border-bottom-right-radius:7px;\n"
                                      "border: 1px solid #8f8f91;\n"
                                      "\n"
                                      "}")
        self.main_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.main_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_frame.setObjectName("main_frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.main_frame)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame_2 = QtWidgets.QFrame(self.main_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_5 = QtWidgets.QFrame(self.frame_2)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.close_button = QtWidgets.QPushButton(self.frame_5)
        self.close_button.setGeometry(QtCore.QRect(1120, 10, 38, 38))
        self.close_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.close_button.setStyleSheet("QPushButton{\n"
                                        "                background-color: transparent; \n"
                                        "                border-radius:7px;\n"
                                        "  border: 2px solid #96989b;}\n"
                                        "            QPushButton:hover{\n"
                                        "               padding-top:5px;\n"
                                        "padding-left:5px;\n"
                                        "}")
        self.close_button.setText("")
        self.close_button.setObjectName("close_button")
        self.label_2 = QtWidgets.QLabel(self.frame_5)
        self.label_2.setGeometry(QtCore.QRect(510, 0, 181, 61))
        self.label_2.setStyleSheet("color:black;\n"
                                   "border:none;\n"
                                   "font-size:25px;\n"
                                   "font-weight:700;\n"
                                   "font-family: \"微软雅黑\", Helvetica, Arial, sans-serif;")
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.frame_5)
        self.verticalLayout.addWidget(self.frame_2)
        self.frame = QtWidgets.QFrame(self.main_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.frame)
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabWidget.setStyleSheet("QTabWidget::pane { /* 设置整个QTabWidget的背景色 */\n"
                                     "    background-color: #bedcf5;\n"
                                     "}\n"
                                     "\n"
                                     "\n"
                                     "/* 未选中的选项卡 */\n"
                                     "\n"
                                     "QTabBar::tab{\n"
                                     "    background-color: #E6E6E6;\n"
                                     "    color: #333333;\n"
                                     "    min-width: 35ex;\n"
                                     "\n"
                                     "    padding: 5px;\n"
                                     "    border-top-left-radius: 5px;\n"
                                     "    border-top-right-radius: 5px;\n"
                                     "}\n"
                                     "/* 选中的选项卡 */\n"
                                     "QTabBar::tab:selected, QTabBar::tab:hover:selected {\n"
                                     "    background-color: #bedcf5;\n"
                                     "    color: #0078d7;\n"
                                     "    border-top: 2px solid #0078d7;\n"
                                     "    border-bottom: none;\n"
                                     "}\n"
                                     "\n"
                                     "/* 不可用的选项卡 */\n"
                                     "QTabBar::tab:disabled {\n"
                                     "    color: #999;\n"
                                     "}\n"
                                     "")
        self.tabWidget.setObjectName("tabWidget")
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setStyleSheet("")
        self.tab_1.setObjectName("tab_1")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab_1)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame_3 = QtWidgets.QFrame(self.tab_1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(8)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_3)
        self.verticalLayout_3.setContentsMargins(155, -1, 155, -1)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.tableWidget = QtWidgets.QTableWidget(self.frame_3)
        self.tableWidget.setStyleSheet("/* 设置整个表格的背景色 */  \n"
                                       "QTableWidget#tableWidget {  \n"
                                       "    background-color: #ffffff; /* 白色背景 */  \n"
                                       "    border: 1px solid #ccc; /* 边框 */  \n"
                                       "    border-radius: 6px; /* 圆角 */  \n"
                                       "\n"
                                       "}  \n"
                                       "  \n"
                                       "/* 设置表头的样式 */  \n"
                                       "QTableWidget#tableWidget QHeaderView::section {  \n"
                                       "    background-color: #f0f0f0; /* 浅灰色背景 */  \n"
                                       "    font-family: \"Arial\";  \n"
                                       "    font-size: 20px;  \n"
                                       "    font-weight: bold;  \n"
                                       "    color: #333; /* 文本颜色 */  \n"
                                       "    border: 1px solid #ccc; /* 边框 */  \n"
                                       "    border-right: none; /* 去除右边的边框，使得相邻的 section 边框连续 */  \n"
                                       "    padding: 4px; /* 内边距 */  \n"
                                       "    text-align: center; /* 文本对齐方式 */  \n"
                                       "    text-transform: uppercase; /* 文本大写 */  \n"
                                       "}  \n"
                                       "  \n"
                                       "/* 设置表头的鼠标悬停效果 */  \n"
                                       "QTableWidget#tableWidget QHeaderView::section:hover {  \n"
                                       "    background-color: #e0e0e0; /* 鼠标悬停时的背景色 */  \n"
                                       "}  \n"
                                       "  \n"
                                       "/* 设置表格单元格的样式 */  \n"
                                       "QTableWidget#tableWidge QTableWidgetItem {  \n"
                                       "    border-bottom: 1px solid #ccc; /* 单元格底部边框 */  \n"
                                       "    padding: 4px; /* 内边距 */  \n"
                                       "}  \n"
                                       "  \n"
                                       "/* 设置选中行的样式 */  \n"
                                       "QTableWidget#tableWidget::item:selected {  \n"
                                       "    background-color: #a0a0a0; /* 选中时的背景色 */  \n"
                                       "    color: #ffffff; /* 选中时的文本颜色 */  \n"
                                       "}  \n"
                                       "  \n"
                                       "/* 设置鼠标悬停在单元格上的样式 */  \n"
                                       "QTableWidget#tableWidget::item:hover {  \n"
                                       "    background-color: #e0e0e0; /* 鼠标悬停时的背景色 */  \n"
                                       "}  \n"
                                       "  \n"
                                       "/* 去除最后一行的底部边框，如果需要的话 */  \n"
                                       "QTableWidget#tableWidget QTableWidgetItem:last-child {  \n"
                                       "    border-bottom: none;  \n"
                                       "}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.verticalLayout_3.addWidget(self.tableWidget)
        self.verticalLayout_2.addWidget(self.frame_3)
        self.frame_4 = QtWidgets.QFrame(self.tab_1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
        self.frame_4.setSizePolicy(sizePolicy)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout_2.setContentsMargins(11, 0, 11, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame_8 = QtWidgets.QFrame(self.frame_4)
        self.frame_8.setStyleSheet("QPushButton{\n"
                                   "color:#ffffff;\n"
                                   "background:#0099ff;\n"
                                   "border:2px solid gray;\n"
                                   "font-size:20px;\n"
                                   "\n"
                                   "font-family: \"微软雅黑\";\n"
                                   "border-radius:12px;\n"
                                   "height:38px;\n"
                                   "}\n"
                                   "\n"
                                   "QPushButton:hover{\n"
                                   "padding-under:5px;\n"
                                   "padding-left:5px;\n"
                                   "background:#008deb;\n"
                                   "   }")
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_8)
        self.horizontalLayout_3.setContentsMargins(30, -1, 30, -1)
        self.horizontalLayout_3.setSpacing(10)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.add_button_tab1 = QtWidgets.QPushButton(self.frame_8)
        self.add_button_tab1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.add_button_tab1.setStyleSheet("#successful_button{\n"
                                           "color:#ffffff;\n"
                                           "background:#0099ff;\n"
                                           "border:2px solid gray;\n"
                                           "font-size:20px;\n"
                                           "\n"
                                           "font-family: \"微软雅黑\";\n"
                                           "border-radius:12px;\n"
                                           "height:38px;\n"
                                           "}\n"
                                           "\n"
                                           "#successful_button:hover{\n"
                                           "padding-under:5px;\n"
                                           "padding-left:5px;\n"
                                           "background:#008deb;\n"
                                           "   }")
        self.add_button_tab1.setObjectName("add_button_tab1")
        self.horizontalLayout_3.addWidget(self.add_button_tab1)
        self.del_button_tab1 = QtWidgets.QPushButton(self.frame_8)
        self.del_button_tab1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.del_button_tab1.setObjectName("del_button_tab1")
        self.horizontalLayout_3.addWidget(self.del_button_tab1)
        self.save_button_tab1 = QtWidgets.QPushButton(self.frame_8)
        self.save_button_tab1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.save_button_tab1.setStyleSheet("#successful_button{\n"
                                            "color:#ffffff;\n"
                                            "background:#0099ff;\n"
                                            "border:2px solid gray;\n"
                                            "font-size:20px;\n"
                                            "\n"
                                            "font-family: \"微软雅黑\";\n"
                                            "border-radius:12px;\n"
                                            "height:38px;\n"
                                            "}\n"
                                            "\n"
                                            "#successful_button:hover{\n"
                                            "padding-under:5px;\n"
                                            "padding-left:5px;\n"
                                            "background:#008deb;\n"
                                            "   }")
        self.save_button_tab1.setObjectName("save_button_tab1")
        self.horizontalLayout_3.addWidget(self.save_button_tab1)
        self.successful_button_tab1 = QtWidgets.QPushButton(self.frame_8)
        self.successful_button_tab1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.successful_button_tab1.setStyleSheet("")
        self.successful_button_tab1.setObjectName("successful_button_tab1")
        self.horizontalLayout_3.addWidget(self.successful_button_tab1)
        self.horizontalLayout_2.addWidget(self.frame_8)
        self.verticalLayout_2.addWidget(self.frame_4)
        self.tabWidget.addTab(self.tab_1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tab_2)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.frame_6 = QtWidgets.QFrame(self.tab_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(8)
        sizePolicy.setHeightForWidth(self.frame_6.sizePolicy().hasHeightForWidth())
        self.frame_6.setSizePolicy(sizePolicy)
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_6)
        self.verticalLayout_5.setContentsMargins(155, -1, 155, -1)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.frame_6)
        self.tableWidget_2.setStyleSheet("/* 设置整个表格的背景色 */  \n"
                                         "QTableWidget#tableWidget_2 {  \n"
                                         "    background-color: #ffffff; /* 白色背景 */  \n"
                                         "    border: 1px solid #ccc; /* 边框 */  \n"
                                         "    border-radius: 6px; /* 圆角 */  \n"
                                         "\n"
                                         "}  \n"
                                         "  \n"
                                         "/* 设置表头的样式 */  \n"
                                         "QTableWidget#tableWidget_2 QHeaderView::section {  \n"
                                         "    background-color: #f0f0f0; /* 浅灰色背景 */  \n"
                                         "    font-family: \"Arial\";  \n"
                                         "    font-size: 20px;  \n"
                                         "    font-weight: bold;  \n"
                                         "    color: #333; /* 文本颜色 */  \n"
                                         "    border: 1px solid #ccc; /* 边框 */  \n"
                                         "    border-right: none; /* 去除右边的边框，使得相邻的 section 边框连续 */  \n"
                                         "    padding: 4px; /* 内边距 */  \n"
                                         "    text-align: center; /* 文本对齐方式 */  \n"
                                         "    text-transform: uppercase; /* 文本大写 */  \n"
                                         "}  \n"
                                         "  \n"
                                         "/* 设置表头的鼠标悬停效果 */  \n"
                                         "QTableWidget#tableWidget_2 QHeaderView::section:hover {  \n"
                                         "    background-color: #e0e0e0; /* 鼠标悬停时的背景色 */  \n"
                                         "}  \n"
                                         "  \n"
                                         "/* 设置表格单元格的样式 */  \n"
                                         "QTableWidget#tableWidget_2 QTableWidgetItem {  \n"
                                         "    border-bottom: 1px solid #ccc; /* 单元格底部边框 */  \n"
                                         "    padding: 4px; /* 内边距 */  \n"
                                         "}  \n"
                                         "  \n"
                                         "/* 设置选中行的样式 */  \n"
                                         "QTableWidget#tableWidget_2::item:selected {  \n"
                                         "    background-color: #a0a0a0; /* 选中时的背景色 */  \n"
                                         "    color: #ffffff; /* 选中时的文本颜色 */  \n"
                                         "}  \n"
                                         "  \n"
                                         "/* 设置鼠标悬停在单元格上的样式 */  \n"
                                         "QTableWidget#tableWidget_2::item:hover {  \n"
                                         "    background-color: #e0e0e0; /* 鼠标悬停时的背景色 */  \n"
                                         "}  \n"
                                         "  \n"
                                         "/* 去除最后一行的底部边框，如果需要的话 */  \n"
                                         "QTableWidget#tableWidget_2 QTableWidgetItem:last-child {  \n"
                                         "    border-bottom: none;  \n"
                                         "}")
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(0)
        self.tableWidget_2.setRowCount(0)
        self.verticalLayout_5.addWidget(self.tableWidget_2)
        self.verticalLayout_6.addWidget(self.frame_6)
        self.frame_7 = QtWidgets.QFrame(self.tab_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame_7.sizePolicy().hasHeightForWidth())
        self.frame_7.setSizePolicy(sizePolicy)
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.frame_7)
        self.verticalLayout_7.setContentsMargins(11, 0, 11, 0)
        self.verticalLayout_7.setSpacing(10)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame_9 = QtWidgets.QFrame(self.frame_7)
        self.frame_9.setStyleSheet("QPushButton{\n"
                                   "color:#ffffff;\n"
                                   "background:#0099ff;\n"
                                   "border:2px solid gray;\n"
                                   "font-size:20px;\n"
                                   "\n"
                                   "font-family: \"微软雅黑\";\n"
                                   "border-radius:12px;\n"
                                   "height:38px;\n"
                                   "}\n"
                                   "\n"
                                   "QPushButton:hover{\n"
                                   "padding-under:5px;\n"
                                   "padding-left:5px;\n"
                                   "background:#008deb;\n"
                                   "   }")
        self.frame_9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_9)
        self.horizontalLayout_4.setContentsMargins(30, -1, 30, -1)
        self.horizontalLayout_4.setSpacing(10)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.add_button_tab2 = QtWidgets.QPushButton(self.frame_9)
        self.add_button_tab2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.add_button_tab2.setStyleSheet("#successful_button{\n"
                                           "color:#ffffff;\n"
                                           "background:#0099ff;\n"
                                           "border:2px solid gray;\n"
                                           "font-size:20px;\n"
                                           "\n"
                                           "font-family: \"微软雅黑\";\n"
                                           "border-radius:12px;\n"
                                           "height:38px;\n"
                                           "}\n"
                                           "\n"
                                           "#successful_button:hover{\n"
                                           "padding-under:5px;\n"
                                           "padding-left:5px;\n"
                                           "background:#008deb;\n"
                                           "   }")
        self.add_button_tab2.setObjectName("add_button_tab2")
        self.horizontalLayout_4.addWidget(self.add_button_tab2)
        self.del_button_tab2 = QtWidgets.QPushButton(self.frame_9)
        self.del_button_tab2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.del_button_tab2.setObjectName("del_button_tab2")
        self.horizontalLayout_4.addWidget(self.del_button_tab2)
        self.save_button_tab2 = QtWidgets.QPushButton(self.frame_9)
        self.save_button_tab2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.save_button_tab2.setStyleSheet("#successful_button{\n"
                                            "color:#ffffff;\n"
                                            "background:#0099ff;\n"
                                            "border:2px solid gray;\n"
                                            "font-size:20px;\n"
                                            "\n"
                                            "font-family: \"微软雅黑\";\n"
                                            "border-radius:12px;\n"
                                            "height:38px;\n"
                                            "}\n"
                                            "\n"
                                            "#successful_button:hover{\n"
                                            "padding-under:5px;\n"
                                            "padding-left:5px;\n"
                                            "background:#008deb;\n"
                                            "   }")
        self.save_button_tab2.setObjectName("save_button_tab2")
        self.horizontalLayout_4.addWidget(self.save_button_tab2)
        self.successful_button_tab2 = QtWidgets.QPushButton(self.frame_9)
        self.successful_button_tab2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.successful_button_tab2.setStyleSheet("")
        self.successful_button_tab2.setObjectName("successful_button_tab2")
        self.horizontalLayout_4.addWidget(self.successful_button_tab2)
        self.verticalLayout_7.addWidget(self.frame_9)
        self.verticalLayout_6.addWidget(self.frame_7)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.tab_3)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.frame_10 = QtWidgets.QFrame(self.tab_3)
        self.frame_10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_10.setObjectName("frame_10")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.frame_10)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.frame_11 = QtWidgets.QFrame(self.frame_10)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.frame_11.sizePolicy().hasHeightForWidth())
        self.frame_11.setSizePolicy(sizePolicy)
        self.frame_11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_11.setObjectName("frame_11")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.frame_11)
        self.verticalLayout_10.setContentsMargins(-1, 0, -1, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.frame_14 = QtWidgets.QFrame(self.frame_11)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.frame_14.sizePolicy().hasHeightForWidth())
        self.frame_14.setSizePolicy(sizePolicy)
        self.frame_14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.label = QtWidgets.QLabel(self.frame_14)
        self.label.setGeometry(QtCore.QRect(530, 20, 161, 31))
        self.label.setStyleSheet("color:black;\n"
                                 "border:none;\n"
                                 "font-size:25px;\n"
                                 "font-weight:700;\n"
                                 "font-family: \"微软雅黑\", Helvetica, Arial, sans-serif;")
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(self.frame_14)
        self.label_3.setGeometry(QtCore.QRect(450, 10, 61, 51))
        self.label_3.setStyleSheet("color:black;\n"
                                   "border:none;\n"
                                   "font-size:25px;\n"
                                   "font-weight:700;\n"
                                   "font-family: \"微软雅黑\", Helvetica, Arial, sans-serif;")
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap(":/icons/images/logo.jpg"))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_10.addWidget(self.frame_14)
        self.frame_15 = QtWidgets.QFrame(self.frame_11)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(6)
        sizePolicy.setHeightForWidth(self.frame_15.sizePolicy().hasHeightForWidth())
        self.frame_15.setSizePolicy(sizePolicy)
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame_15)
        self.horizontalLayout_5.setContentsMargins(-1, 0, -1, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.frame_16 = QtWidgets.QFrame(self.frame_15)
        self.frame_16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_16.setObjectName("frame_16")
        self.name_little = QtWidgets.QPushButton(self.frame_16)
        self.name_little.setEnabled(False)
        self.name_little.setGeometry(QtCore.QRect(150, 20, 71, 35))
        self.name_little.setStyleSheet("color:black;\n"
                                       "border:none;\n"
                                       "font-size:20px;\n"
                                       "font-weight:500;\n"
                                       "font-family: \"微软雅黑\";\n"
                                       "height:35px;\n"
                                       "text-align:right;\n"
                                       "\n"
                                       "")
        self.name_little.setObjectName("name_little")
        self.reset_button = QtWidgets.QPushButton(self.frame_16)
        self.reset_button.setGeometry(QtCore.QRect(800, 20, 150, 42))
        self.reset_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.reset_button.setStyleSheet("#reset_button{\n"
                                        "color:#ffffff;\n"
                                        "background:#0099ff;\n"
                                        "border:2px solid gray;\n"
                                        "font-size:20px;\n"
                                        "\n"
                                        "font-family: \"微软雅黑\";\n"
                                        "border-radius:12px;\n"
                                        "height:38px;\n"
                                        "}\n"
                                        "\n"
                                        "#reset_button:hover{\n"
                                        "padding-under:5px;\n"
                                        "padding-left:5px;\n"
                                        "background:#008deb;\n"
                                        "   }")
        self.reset_button.setObjectName("reset_button")
        self.id_lineEdit = QtWidgets.QLineEdit(self.frame_16)
        self.id_lineEdit.setGeometry(QtCore.QRect(220, 20, 201, 41))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.id_lineEdit.sizePolicy().hasHeightForWidth())
        self.id_lineEdit.setSizePolicy(sizePolicy)
        self.id_lineEdit.setStyleSheet("border:2px solid gray;\n"
                                       "font-size:16px;\n"
                                       "font-weight:600;\n"
                                       "font-family: \"微软雅黑\";\n"
                                       "border-radius:12px;\n"
                                       "height:35px;")
        self.id_lineEdit.setObjectName("id_lineEdit")
        self.student_search_button = QtWidgets.QPushButton(self.frame_16)
        self.student_search_button.setGeometry(QtCore.QRect(450, 20, 150, 42))
        self.student_search_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.student_search_button.setStyleSheet("#student_search_button{\n"
                                                 "color:#ffffff;\n"
                                                 "background:#0099ff;\n"
                                                 "border:2px solid gray;\n"
                                                 "font-size:20px;\n"
                                                 "\n"
                                                 "font-family: \"微软雅黑\";\n"
                                                 "border-radius:12px;\n"
                                                 "height:38px;\n"
                                                 "}\n"
                                                 "\n"
                                                 "#student_search_button:hover{\n"
                                                 "padding-under:5px;\n"
                                                 "padding-left:5px;\n"
                                                 "background:#008deb;\n"
                                                 "   }")
        self.student_search_button.setObjectName("student_search_button")
        self.modify_button = QtWidgets.QPushButton(self.frame_16)
        self.modify_button.setGeometry(QtCore.QRect(610, 20, 181, 42))
        self.modify_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.modify_button.setStyleSheet("#modify_button{\n"
                                         "color:#ffffff;\n"
                                         "background:#0099ff;\n"
                                         "border:2px solid gray;\n"
                                         "font-size:20px;\n"
                                         "\n"
                                         "font-family: \"微软雅黑\";\n"
                                         "border-radius:12px;\n"
                                         "height:38px;\n"
                                         "}\n"
                                         "\n"
                                         "#modify_button:hover{\n"
                                         "padding-under:5px;\n"
                                         "padding-left:5px;\n"
                                         "background:#008deb;\n"
                                         "   }")
        self.modify_button.setObjectName("modify_button")
        self.horizontalLayout_5.addWidget(self.frame_16)
        self.verticalLayout_10.addWidget(self.frame_15)
        self.verticalLayout_9.addWidget(self.frame_11)
        self.frame_12 = QtWidgets.QFrame(self.frame_10)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(4)
        sizePolicy.setHeightForWidth(self.frame_12.sizePolicy().hasHeightForWidth())
        self.frame_12.setSizePolicy(sizePolicy)
        self.frame_12.setStyleSheet("")
        self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_12.setObjectName("frame_12")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.frame_12)
        self.verticalLayout_11.setContentsMargins(172, 0, 170, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.frame_17 = QtWidgets.QFrame(self.frame_12)
        self.frame_17.setStyleSheet("")
        self.frame_17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_17.setObjectName("frame_17")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame_17)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.tableWidget_student = QtWidgets.QTableWidget(self.frame_17)
        self.tableWidget_student.setStyleSheet("/* 设置整个表格的背景色 */  \n"
                                               "QTableWidget#tableWidget_student {  \n"
                                               "    background-color: #ffffff; /* 白色背景 */  \n"
                                               "    border: 1px solid #ccc; /* 边框 */  \n"
                                               "    border-radius: 6px; /* 圆角 */  \n"
                                               "\n"
                                               "}  \n"
                                               "  \n"
                                               "/* 设置表头的样式 */  \n"
                                               "QTableWidget#tableWidget_student QHeaderView::section {  \n"
                                               "    background-color: #f0f0f0; /* 浅灰色背景 */  \n"
                                               "    font-family: \"Arial\";  \n"
                                               "    font-size: 20px;  \n"
                                               "    font-weight: bold;  \n"
                                               "    color: #333; /* 文本颜色 */  \n"
                                               "    border: 1px solid #ccc; /* 边框 */  \n"
                                               "    border-right: none; /* 去除右边的边框，使得相邻的 section 边框连续 */  \n"
                                               "    padding: 4px; /* 内边距 */  \n"
                                               "    text-align: center; /* 文本对齐方式 */  \n"
                                               "    text-transform: uppercase; /* 文本大写 */  \n"
                                               "}  \n"
                                               "  \n"
                                               "/* 设置表头的鼠标悬停效果 */  \n"
                                               "QTableWidget#tableWidget_student QHeaderView::section:hover {  \n"
                                               "    background-color: #e0e0e0; /* 鼠标悬停时的背景色 */  \n"
                                               "}  \n"
                                               "  \n"
                                               "/* 设置表格单元格的样式 */  \n"
                                               "QTableWidget#tableWidget_student QTableWidgetItem {  \n"
                                               "    border-bottom: 1px solid #ccc; /* 单元格底部边框 */  \n"
                                               "    padding: 4px; /* 内边距 */  \n"
                                               "}  \n"
                                               "  \n"
                                               "/* 设置选中行的样式 */  \n"
                                               "QTableWidget#tableWidget_student::item:selected {  \n"
                                               "    background-color: #a0a0a0; /* 选中时的背景色 */  \n"
                                               "    color: #ffffff; /* 选中时的文本颜色 */  \n"
                                               "}  \n"
                                               "  \n"
                                               "/* 设置鼠标悬停在单元格上的样式 */  \n"
                                               "QTableWidget#tableWidget_student::item:hover {  \n"
                                               "    background-color: #e0e0e0; /* 鼠标悬停时的背景色 */  \n"
                                               "}  \n"
                                               "  \n"
                                               "/* 去除最后一行的底部边框，如果需要的话 */  \n"
                                               "QTableWidget#tableWidget_student QTableWidgetItem:last-child {  \n"
                                               "    border-bottom: none;  \n"
                                               "}")
        self.tableWidget_student.setObjectName("tableWidget_student")
        self.tableWidget_student.setColumnCount(6)
        self.tableWidget_student.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_student.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_student.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_student.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_student.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_student.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_student.setHorizontalHeaderItem(5, item)
        self.horizontalLayout_6.addWidget(self.tableWidget_student)
        self.verticalLayout_11.addWidget(self.frame_17)
        self.verticalLayout_9.addWidget(self.frame_12)
        self.frame_13 = QtWidgets.QFrame(self.frame_10)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(4)
        sizePolicy.setHeightForWidth(self.frame_13.sizePolicy().hasHeightForWidth())
        self.frame_13.setSizePolicy(sizePolicy)
        self.frame_13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_13.setObjectName("frame_13")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_13)
        self.verticalLayout_12.setContentsMargins(30, 0, 30, 0)
        self.verticalLayout_12.setSpacing(0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.frame_18 = QtWidgets.QFrame(self.frame_13)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(8)
        sizePolicy.setHeightForWidth(self.frame_18.sizePolicy().hasHeightForWidth())
        self.frame_18.setSizePolicy(sizePolicy)
        self.frame_18.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_18.setObjectName("frame_18")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.frame_18)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setSpacing(0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.frame_20 = QtWidgets.QFrame(self.frame_18)
        self.frame_20.setStyleSheet("QLineEdit{\n"
                                    "border:2px solid gray;\n"
                                    "font-size:16px;\n"
                                    "font-weight:600;\n"
                                    "font-family: \"微软雅黑\";\n"
                                    "border-radius:12px;\n"
                                    "height:35px;\n"
                                    "\n"
                                    "}")
        self.frame_20.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_20.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_20.setObjectName("frame_20")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.frame_20)
        self.horizontalLayout_8.setContentsMargins(-1, 0, -1, 0)
        self.horizontalLayout_8.setSpacing(0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.frame_21 = QtWidgets.QFrame(self.frame_20)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_21.sizePolicy().hasHeightForWidth())
        self.frame_21.setSizePolicy(sizePolicy)
        self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_21.setObjectName("frame_21")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.frame_21)
        self.horizontalLayout_9.setContentsMargins(125, 0, 0, 0)
        self.horizontalLayout_9.setSpacing(0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.frame_23 = QtWidgets.QFrame(self.frame_21)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_23.sizePolicy().hasHeightForWidth())
        self.frame_23.setSizePolicy(sizePolicy)
        self.frame_23.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_23.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_23.setObjectName("frame_23")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.frame_23)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.modify_age_button_2 = QtWidgets.QPushButton(self.frame_23)
        self.modify_age_button_2.setEnabled(False)
        self.modify_age_button_2.setStyleSheet("color:black;\n"
                                               "border:none;\n"
                                               "font-size:20px;\n"
                                               "font-weight:500;\n"
                                               "font-family: \"微软雅黑\";\n"
                                               "height:35px;\n"
                                               "\n"
                                               "\n"
                                               "")
        self.modify_age_button_2.setObjectName("modify_age_button_2")
        self.verticalLayout_15.addWidget(self.modify_age_button_2)
        self.modify_sex_button_2 = QtWidgets.QPushButton(self.frame_23)
        self.modify_sex_button_2.setEnabled(False)
        self.modify_sex_button_2.setStyleSheet("color:black;border:none;\n"
                                               "font-size:20px;\n"
                                               "font-weight:500;\n"
                                               "font-family: \"微软雅黑\";\n"
                                               "height:35px;\n"
                                               "\n"
                                               "")
        self.modify_sex_button_2.setObjectName("modify_sex_button_2")
        self.verticalLayout_15.addWidget(self.modify_sex_button_2)
        self.modify_more_button_2 = QtWidgets.QPushButton(self.frame_23)
        self.modify_more_button_2.setEnabled(False)
        self.modify_more_button_2.setStyleSheet("color:black;border:none;\n"
                                                "font-size:20px;\n"
                                                "font-weight:500;\n"
                                                "font-family: \"微软雅黑\";\n"
                                                "height:35px;\n"
                                                "\n"
                                                "")
        self.modify_more_button_2.setObjectName("modify_more_button_2")
        self.verticalLayout_15.addWidget(self.modify_more_button_2)
        self.horizontalLayout_9.addWidget(self.frame_23)
        self.frame_24 = QtWidgets.QFrame(self.frame_21)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(8)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_24.sizePolicy().hasHeightForWidth())
        self.frame_24.setSizePolicy(sizePolicy)
        self.frame_24.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_24.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_24.setObjectName("frame_24")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.frame_24)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.change_id_lineEdit = QtWidgets.QLineEdit(self.frame_24)
        self.change_id_lineEdit.setStyleSheet("")
        self.change_id_lineEdit.setObjectName("change_id_lineEdit")
        self.verticalLayout_16.addWidget(self.change_id_lineEdit)
        self.name_lineEdit = QtWidgets.QLineEdit(self.frame_24)
        self.name_lineEdit.setObjectName("name_lineEdit")
        self.verticalLayout_16.addWidget(self.name_lineEdit)
        self.passsword_lineEdit = QtWidgets.QLineEdit(self.frame_24)
        self.passsword_lineEdit.setObjectName("passsword_lineEdit")
        self.verticalLayout_16.addWidget(self.passsword_lineEdit)
        self.horizontalLayout_9.addWidget(self.frame_24)
        self.horizontalLayout_8.addWidget(self.frame_21)
        self.frame_22 = QtWidgets.QFrame(self.frame_20)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_22.sizePolicy().hasHeightForWidth())
        self.frame_22.setSizePolicy(sizePolicy)
        self.frame_22.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_22.setObjectName("frame_22")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.frame_22)
        self.horizontalLayout_10.setContentsMargins(0, 0, 125, 0)
        self.horizontalLayout_10.setSpacing(0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.frame_25 = QtWidgets.QFrame(self.frame_22)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_25.sizePolicy().hasHeightForWidth())
        self.frame_25.setSizePolicy(sizePolicy)
        self.frame_25.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_25.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_25.setObjectName("frame_25")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.frame_25)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.modify_age_button = QtWidgets.QPushButton(self.frame_25)
        self.modify_age_button.setEnabled(False)
        self.modify_age_button.setStyleSheet("color:black;\n"
                                             "border:none;\n"
                                             "font-size:20px;\n"
                                             "font-weight:500;\n"
                                             "font-family: \"微软雅黑\";\n"
                                             "height:35px;\n"
                                             "\n"
                                             "\n"
                                             "")
        self.modify_age_button.setObjectName("modify_age_button")
        self.verticalLayout_13.addWidget(self.modify_age_button)
        self.modify_sex_button = QtWidgets.QPushButton(self.frame_25)
        self.modify_sex_button.setEnabled(False)
        self.modify_sex_button.setStyleSheet("color:black;border:none;\n"
                                             "font-size:20px;\n"
                                             "font-weight:500;\n"
                                             "font-family: \"微软雅黑\";\n"
                                             "height:35px;\n"
                                             "\n"
                                             "")
        self.modify_sex_button.setObjectName("modify_sex_button")
        self.verticalLayout_13.addWidget(self.modify_sex_button)
        self.modify_more_button = QtWidgets.QPushButton(self.frame_25)
        self.modify_more_button.setEnabled(False)
        self.modify_more_button.setStyleSheet("color:black;border:none;\n"
                                              "font-size:20px;\n"
                                              "font-weight:500;\n"
                                              "font-family: \"微软雅黑\";\n"
                                              "height:35px;\n"
                                              "\n"
                                              "")
        self.modify_more_button.setObjectName("modify_more_button")
        self.verticalLayout_13.addWidget(self.modify_more_button)
        self.horizontalLayout_10.addWidget(self.frame_25)
        self.frame_26 = QtWidgets.QFrame(self.frame_22)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(8)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_26.sizePolicy().hasHeightForWidth())
        self.frame_26.setSizePolicy(sizePolicy)
        self.frame_26.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_26.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_26.setObjectName("frame_26")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.frame_26)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.age_lineEdit = QtWidgets.QLineEdit(self.frame_26)
        self.age_lineEdit.setStyleSheet("")
        self.age_lineEdit.setObjectName("age_lineEdit")
        self.verticalLayout_14.addWidget(self.age_lineEdit)
        self.sex_lineEdit = QtWidgets.QLineEdit(self.frame_26)
        self.sex_lineEdit.setObjectName("sex_lineEdit")
        self.verticalLayout_14.addWidget(self.sex_lineEdit)
        self.more_lineEdit = QtWidgets.QLineEdit(self.frame_26)
        self.more_lineEdit.setObjectName("more_lineEdit")
        self.verticalLayout_14.addWidget(self.more_lineEdit)
        self.horizontalLayout_10.addWidget(self.frame_26)
        self.horizontalLayout_8.addWidget(self.frame_22)
        self.horizontalLayout_7.addWidget(self.frame_20)
        self.verticalLayout_12.addWidget(self.frame_18)
        self.frame_19 = QtWidgets.QFrame(self.frame_13)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(4)
        sizePolicy.setHeightForWidth(self.frame_19.sizePolicy().hasHeightForWidth())
        self.frame_19.setSizePolicy(sizePolicy)
        self.frame_19.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_19.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_19.setObjectName("frame_19")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.frame_19)
        self.horizontalLayout_11.setContentsMargins(130, 0, 130, 0)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.frame_27 = QtWidgets.QFrame(self.frame_19)
        self.frame_27.setStyleSheet("QPushButton{\n"
                                    "color:#ffffff;\n"
                                    "background:#0099ff;\n"
                                    "border:2px solid gray;\n"
                                    "font-size:20px;\n"
                                    "\n"
                                    "font-family: \"微软雅黑\";\n"
                                    "border-radius:12px;\n"
                                    "height:38px;\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:hover{\n"
                                    "padding-under:5px;\n"
                                    "padding-left:5px;\n"
                                    "background:#008deb;\n"
                                    "   }")
        self.frame_27.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_27.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_27.setObjectName("frame_27")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.frame_27)
        self.horizontalLayout_12.setSpacing(60)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.confirm_button = QtWidgets.QPushButton(self.frame_27)
        self.confirm_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.confirm_button.setStyleSheet("#search_button{\n"
                                          "color:#ffffff;\n"
                                          "background:#0099ff;\n"
                                          "border:2px solid gray;\n"
                                          "font-size:20px;\n"
                                          "\n"
                                          "font-family: \"微软雅黑\";\n"
                                          "border-radius:12px;\n"
                                          "height:38px;\n"
                                          "}\n"
                                          "\n"
                                          "#search_button:hover{\n"
                                          "padding-under:5px;\n"
                                          "padding-left:5px;\n"
                                          "background:#008deb;\n"
                                          "   }")
        self.confirm_button.setObjectName("confirm_button")
        self.horizontalLayout_12.addWidget(self.confirm_button)
        self.del_student_button = QtWidgets.QPushButton(self.frame_27)
        self.del_student_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.del_student_button.setStyleSheet("#search_button{\n"
                                              "color:#ffffff;\n"
                                              "background:#0099ff;\n"
                                              "border:2px solid gray;\n"
                                              "font-size:20px;\n"
                                              "\n"
                                              "font-family: \"微软雅黑\";\n"
                                              "border-radius:12px;\n"
                                              "height:38px;\n"
                                              "}\n"
                                              "\n"
                                              "#search_button:hover{\n"
                                              "padding-under:5px;\n"
                                              "padding-left:5px;\n"
                                              "background:#008deb;\n"
                                              "   }")
        self.del_student_button.setObjectName("del_student_button")
        self.horizontalLayout_12.addWidget(self.del_student_button)
        self.register_button = QtWidgets.QPushButton(self.frame_27)
        self.register_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.register_button.setStyleSheet("#search_button{\n"
                                           "color:#ffffff;\n"
                                           "background:#0099ff;\n"
                                           "border:2px solid gray;\n"
                                           "font-size:20px;\n"
                                           "\n"
                                           "font-family: \"微软雅黑\";\n"
                                           "border-radius:12px;\n"
                                           "height:38px;\n"
                                           "}\n"
                                           "\n"
                                           "#search_button:hover{\n"
                                           "padding-under:5px;\n"
                                           "padding-left:5px;\n"
                                           "background:#008deb;\n"
                                           "   }")
        self.register_button.setObjectName("register_button")
        self.horizontalLayout_12.addWidget(self.register_button)
        self.horizontalLayout_11.addWidget(self.frame_27)
        self.verticalLayout_12.addWidget(self.frame_19)
        self.verticalLayout_9.addWidget(self.frame_13)
        self.verticalLayout_8.addWidget(self.frame_10)
        self.tabWidget.addTab(self.tab_3, "")
        self.verticalLayout_4.addWidget(self.tabWidget)
        self.verticalLayout.addWidget(self.frame)

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        # -------------新加内容----------------#
        file_path_1 = '../data/successful_identification_records.xlsx'
        file_path_2 = '../data/login_records.xlsx'
        table_widget = self.tableWidget
        table_widget_2 = self.tableWidget_2
        table_widget_3 = self.tableWidget_student

        # 初始化表格
        self.init_tables(file_path_1, file_path_2)
        self.fill_table_widget_with_data(table_widget_3)
        # 关闭按钮美化
        icon_close = qtawesome.icon('fa.times', color='#7b8290')
        self.close_button.setIcon(icon_close)
        self.close_button.setIconSize(QtCore.QSize(30, 30))  # 根据需要调整图标大小
        # 删除数据按钮
        self.del_button_tab1.clicked.connect(lambda: self.delete_selected_row(table_widget))
        self.del_button_tab2.clicked.connect(lambda: self.delete_selected_row(table_widget_2))
        # 增加数据按钮
        self.add_button_tab1.clicked.connect(lambda: self.add_new_row(table_widget))
        self.add_button_tab2.clicked.connect(lambda: self.add_new_row(table_widget_2))
        # 保存数据按钮
        self.save_button_tab1.clicked.connect(lambda: self.save_table_to_excel(table_widget, file_path_1))
        self.save_button_tab2.clicked.connect(lambda: self.save_table_to_excel(table_widget_2, file_path_2))
        # 导出数据
        self.successful_button_tab1.clicked.connect(lambda: self.export_table_to_excel(table_widget))
        self.successful_button_tab2.clicked.connect(lambda: self.export_table_to_excel(table_widget_2))
        # 设置tableWidget_student选择行为整行选择
        self.tableWidget_student.setSelectionBehavior(QTableWidget.SelectRows)
        # 查询按钮事件
        self.student_search_button.clicked.connect(self.on_search_button_student_clicked)
        # 重置按钮事件
        self.reset_button.clicked.connect(lambda: self.reset_table_widget(table_widget_3))
        # 修改按钮事件
        self.modify_button.clicked.connect(self.modify_button_clicked)
        # 输入框居中显示
        line_text = [self.change_id_lineEdit, self.name_lineEdit, self.passsword_lineEdit, self.age_lineEdit,
                     self.sex_lineEdit, self.more_lineEdit]
        for lineEdit in line_text:
            lineEdit.setAlignment(Qt.AlignCenter)
        # 确认修改事件
        self.confirm_button.clicked.connect(self.confirm_button_clicked)
        # 删除数据事件
        self.del_student_button.clicked.connect(self.del_student_button_clicked)
        # 添加学生时间
        self.register_button.clicked.connect(self.register_button_clicked)
        # 关闭窗口
        self.close_button.clicked.connect(Dialog.close)
        # 窗口设置
        Dialog.setAttribute(QtCore.Qt.WA_TranslucentBackground)  # 隐藏外围边框
        Dialog.setWindowFlag(QtCore.Qt.FramelessWindowHint)  # 产生一个无边框的窗口，用户不能移动和改变大小
        Dialog.setWindowTitle("人脸识别")  # 设置标题
        Dialog.setWindowIcon(QIcon(':/icons/images/logo.jpg'))  # 设置logo
        # -------------新加内容----------------#

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_2.setText(_translate("Dialog", "管理员管理系统"))
        self.add_button_tab1.setText(_translate("Dialog", "添加新数据"))
        self.del_button_tab1.setText(_translate("Dialog", "删除数据"))
        self.save_button_tab1.setText(_translate("Dialog", "保存修改后的数据"))
        self.successful_button_tab1.setText(_translate("Dialog", "导出新的数据"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_1), _translate("Dialog", "识别成功记录"))
        self.add_button_tab2.setText(_translate("Dialog", "添加新数据"))
        self.del_button_tab2.setText(_translate("Dialog", "删除数据"))
        self.save_button_tab2.setText(_translate("Dialog", "保存修改后的数据"))
        self.successful_button_tab2.setText(_translate("Dialog", "导出新的数据"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Dialog", "登录登出记录"))
        self.label.setText(_translate("Dialog", "用户信息管理"))
        self.name_little.setText(_translate("Dialog", "学号："))
        self.reset_button.setText(_translate("Dialog", "重置表格数据"))
        self.student_search_button.setText(_translate("Dialog", "根据学号查询"))
        self.modify_button.setText(_translate("Dialog", "输入学号修改信息"))
        item = self.tableWidget_student.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "学号"))
        item = self.tableWidget_student.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "姓名"))
        item = self.tableWidget_student.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "密码"))
        item = self.tableWidget_student.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "年龄"))
        item = self.tableWidget_student.horizontalHeaderItem(4)
        item.setText(_translate("Dialog", "性别"))
        item = self.tableWidget_student.horizontalHeaderItem(5)
        item.setText(_translate("Dialog", "更多信息"))
        self.modify_age_button_2.setText(_translate("Dialog", "更改学号："))
        self.modify_sex_button_2.setText(_translate("Dialog", "更改姓名："))
        self.modify_more_button_2.setText(_translate("Dialog", "更改密码："))
        self.change_id_lineEdit.setPlaceholderText(_translate("Dialog", "**********"))
        self.name_lineEdit.setPlaceholderText(_translate("Dialog", "**********"))
        self.passsword_lineEdit.setPlaceholderText(_translate("Dialog", "**********"))
        self.modify_age_button.setText(_translate("Dialog", "更改年龄："))
        self.modify_sex_button.setText(_translate("Dialog", "更改性别："))
        self.modify_more_button.setText(_translate("Dialog", "更改信息："))
        self.age_lineEdit.setPlaceholderText(_translate("Dialog", "**********"))
        self.sex_lineEdit.setPlaceholderText(_translate("Dialog", "**********"))
        self.more_lineEdit.setPlaceholderText(_translate("Dialog", "**********"))
        self.confirm_button.setText(_translate("Dialog", "确认修改"))
        self.del_student_button.setText(_translate("Dialog", "删除学生信息"))
        self.register_button.setText(_translate("Dialog", "添加学生"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("Dialog", "学生信息管理"))

    def init_tables(self, file_path_1, file_path_2):
        # 初始化并填充Tab 1的表格
        table_widget = self.tableWidget
        table_widget_2 = self.tableWidget_2
        self.fill_table_widget(file_path_1, table_widget)
        self.fill_table_widget(file_path_2, table_widget_2)

    # 读取用户信息
    def read_person_msg(self):
        all_msg = UserSqlUtil.search_all_msg()
        for tup in all_msg:
            per_list = []
            for i in tup:
                per_list.append(i)
            self.all_list.append(per_list)

    def traverse_list(self, table_widget):
        # 遍历所有的元组（即查询结果）
        for tup in self.all_list:
            # 提取前三个元素
            per_list = tup[:6]
            # 清空表格的现有行
            # 添加一行到表格中
            row_count = table_widget.rowCount()
            table_widget.insertRow(row_count)

            # 将每个元素添加到对应的单元格中
            for column_index, value in enumerate(per_list):
                item = QTableWidgetItem(str(value))  # 将值转换为字符串并创建 QTableWidgetItem
                item.setTextAlignment(Qt.AlignCenter)  # 设置内容为居中
                table_widget.setItem(row_count, column_index, item)  # 将 item 添加到表格中
        self.all_list = []

    def fill_table_widget_with_data(self, table_widget):
        self.read_person_msg()  # 读取数据并填充 self.all_list
        # 如果没有数据，则不执行任何操作
        if not self.all_list:
            return
        table_widget.setRowCount(0)
        self.traverse_list(table_widget)

    @staticmethod
    def fill_table_widget(file_path, table_widgets):
        # 读取Excel文件
        df = pd.read_excel(file_path)
        # 清除旧数据（如果有的话）
        table_widgets.clear()
        table_widgets.setRowCount(0)
        table_widgets.setColumnCount(len(df.columns))
        table_widgets.setHorizontalHeaderLabels(df.columns)
        # 设置表格的行数
        table_widgets.setRowCount(len(df))
        # 填充数据
        for row_index, row in df.iterrows():
            for column_index, value in enumerate(row):
                item = QtWidgets.QTableWidgetItem(str(value))
                item.setTextAlignment(Qt.AlignCenter)  # 设置内容为居中
                table_widgets.setItem(row_index, column_index, item)
        table_widgets.resizeColumnToContents(0)

    # 删除行
    @staticmethod
    def delete_selected_row(table_widgets):
        # 获取当前选中的行
        selected_rows = table_widgets.selectedItems()
        if not selected_rows:
            QtWidgets.QMessageBox.information(None, "提示", "请选中要删除数据")
            return
        # 询问用户是否真的要删除选定的行
        reply = QMessageBox.question(None, '确定吗', '您确定要删除当前选定的的数据行吗?',
                                     QMessageBox.Yes | QMessageBox.No,
                                     QMessageBox.No)
        # 如果用户点击了"是"
        if reply == QMessageBox.Yes:
            # 获取选中的行索引
            selected_row_indexes = set()
            for item in selected_rows:
                selected_row_indexes.add(table_widgets.row(item))

                # 对选中的行进行降序排序，以确保从底部开始删除
            selected_row_indexes = sorted(selected_row_indexes, reverse=True)
            # 删除选中的行
            for row_index in selected_row_indexes:
                table_widgets.removeRow(row_index)

    @staticmethod
    def add_new_row(table_widgets):
        # 获取当前选中的行索引
        selected_row = table_widgets.currentRow()
        # 如果没有行被选中，则在表格底部添加一行
        if selected_row == -1:
            row_count = table_widgets.rowCount()
            table_widgets.insertRow(row_count)
        else:
            # 在选中的行下面添加一行
            table_widgets.insertRow(selected_row + 1)
            # 初始化新行的每个单元格
        for column_index in range(table_widgets.columnCount()):
            item = QtWidgets.QTableWidgetItem("")
            item.setTextAlignment(Qt.AlignCenter)  # 设置内容为居中
            table_widgets.setItem(selected_row + 1, column_index, item)
        # 滚动到底部以便看到新行（如果需要）
        table_widgets.scrollToItem(table_widgets.item(selected_row + 1, 0))

    # 保存表格修改的内容
    @staticmethod
    def save_table_to_excel(table_widgets, file_path):
        # 获取表格的行数和列数
        rows = table_widgets.rowCount()
        columns = table_widgets.columnCount()

        # 获取水平表头的标签
        header_labels = [table_widgets.horizontalHeaderItem(i).text() for i in range(columns)]

        # 创建一个空的DataFrame，其列与表格的列对应
        df = pd.DataFrame(index=range(rows), columns=header_labels)

        # 遍历表格的每一行和每一列
        for row in range(rows):
            for column in range(columns):
                # 获取单元格的项
                item = table_widgets.item(row, column)
                # 如果单元格有项，则获取其文本并保存到DataFrame中
                # 如果单元格没有项（即None），则保存一个空字符串
                df.iat[row, column] = item.text() if item is not None else ''
        # 将DataFrame保存为Excel文件
        try:
            # 写入 Excel 文件
            df.to_excel(file_path, index=False)

            # 检查文件是否存在
            if os.path.exists(file_path):
                QMessageBox.information(None, "提示", f'数据保存成功')
            else:
                QMessageBox.information(None, "错误", '文件未创建，数据写入失败。')

        except Exception as e:
            # 捕获并打印异常
            QMessageBox.information(None, "错误", f"数据写入过程中发生异常: {e}")

    @staticmethod
    def export_table_to_excel(table_widgets):
        # 收集表格数据到列表中，导出表格
        rows = []
        for row_index in range(table_widgets.rowCount()):
            row_data = []
            for column_index in range(table_widgets.columnCount()):
                item = table_widgets.item(row_index, column_index)
                if item is not None:
                    row_data.append(item.text())
                else:
                    row_data.append('')  # 如果没有数据，添加空字符串
            rows.append(row_data)
        # 创建DataFrame
        df = pd.DataFrame(rows, columns=[table_widgets.horizontalHeaderItem(i).text() for i in
                                         range(table_widgets.columnCount())])
        file_path = 'example.xlsx'
        try:
            # 将DataFrame保存为Excel文件
            df.to_excel(file_path, index=False)
            print(f"Excel文件已保存到: {file_path}")
        except Exception as e:
            print(f"创建Excel文件时出错: {e}")

        if os.path.isfile(file_path):
            # 根据操作系统选择打开文件的方式
            if sys.platform.startswith('win'):
                os.startfile(file_path)  # Windows系统
        else:
            # 如果文件不存在，显示错误消息
            print("文件不存在")

    def reset_table_widget(self, table_widget):
        self.read_person_msg()
        # 清空表格中的所有行
        table_widget.setRowCount(0)
        # 遍历所有的元组（即查询结果）
        self.traverse_list(table_widget)

    def on_search_button_student_clicked(self):
        # 获取 id_lineEdit 的内容
        search_id = self.id_lineEdit.text()
        if search_id == '':
            return QMessageBox.information(None, "提示", "学号不能为空，请输入学号")
        # 假设 search_by_name 方法根据名称查询并返回对应的行，这里应该根据实际需求调整方法名和逻辑
        row = UserSqlUtil.search_by_name(search_id)
        self.tableWidget_student.setRowCount(0)
        if row:
            # row 是一个元组，我们取第一个元素（通常是一个包含所有列数据的元组）
            result = row[0]
            # 清空表格的现有行
            # 添加一行到表格中
            row_count = self.tableWidget_student.rowCount()
            self.tableWidget_student.insertRow(row_count)
            # 将 result 的前四个元素添加到表格的对应单元格中
            for column_index, value in enumerate(result[:6]):
                item = QTableWidgetItem(str(value))  # 将值转换为字符串并创建 QTableWidgetItem
                item.setTextAlignment(Qt.AlignCenter)  # 设置内容为居中
                self.tableWidget_student.setItem(row_count, column_index, item)  # 将 item 添加到表格中
        else:
            QMessageBox.about(None, '提示', '找不到' + search_id + '的信息')

    def modify_button_clicked(self):
        # 获取 id_lineEdit 的内容
        search_id = self.id_lineEdit.text()
        if search_id == '':
            return QMessageBox.information(None, "提示", "学号不能为空，请输入学号")
        # 假设 search_by_name 方法根据名称查询并返回对应的行，这里应该根据实际需求调整方法名和逻辑
        row = UserSqlUtil.search_by_name(search_id)
        if row:
            result = row[0]
            self.sid = result[0]
            self.name = result[1]
            self.password = result[2]
            self.age = result[3]
            self.sex = result[4]
            self.more = result[5]
            self.change_id_lineEdit.setText("")
            self.name_lineEdit.setText("")
            self.passsword_lineEdit.setText("")
            self.age_lineEdit.setText("")
            self.sex_lineEdit.setText("")
            self.more_lineEdit.setText("")
            self.change_id_lineEdit.setPlaceholderText(str(self.sid))
            self.name_lineEdit.setPlaceholderText(str(self.name))
            self.passsword_lineEdit.setPlaceholderText(str(self.password))
            self.age_lineEdit.setPlaceholderText(str(self.age))
            self.sex_lineEdit.setPlaceholderText(str(self.sex))
            self.more_lineEdit.setPlaceholderText(str(self.more))
            self.isSearch_flag = 1
        else:
            QMessageBox.about(None, '提示', '找不到' + search_id + '的信息')

    def confirm_button_clicked(self):
        if self.isSearch_flag == 1:
            sid = self.change_id_lineEdit.text()
            name = self.name_lineEdit.text()
            password = self.passsword_lineEdit.text()
            age = self.age_lineEdit.text()
            sex = self.sex_lineEdit.text()
            more = self.more_lineEdit.text()
            if sid != '':
                self.hasModify_flag = 1
            else:
                sid = self.sid
            if password != '':
                self.hasModify_flag = 1
            else:
                password = self.password
            if name != '':
                self.hasModify_flag = 1
            else:
                name = self.name
            if age != '' and str.isdigit(age) is True:
                self.hasModify_flag = 1
            else:
                age = self.age
            if sex != '' and (sex == '男' or sex == '女'):
                self.hasModify_flag = 1
            else:
                sex = self.sex
            if more != '':
                self.hasModify_flag = 1
            else:
                more = self.more
            if self.hasModify_flag == 1:
                UserSqlUtil.update_by_id_without_encoding(sid, name, password, age, sex, more)
                self.isSearch_flag = 0
                QMessageBox.about(None, '更新', str(sid) + '的部分信息已更改')
            else:
                QMessageBox.about(None, '提示', '请先修改信息')
        else:
            QMessageBox.about(None, '提示', '请先输入正确的学号，单击修改数据按钮后再修改数据！')

    def del_student_button_clicked(self):
        # 检查是否有选中的行
        if self.tableWidget_student.selectedItems():
            # 获取第一个选中项的行号
            row = self.tableWidget_student.selectedItems()[0].row()
            # 遍历该行的所有列
            row_data = []
            for column in range(self.tableWidget_student.columnCount()):
                item = self.tableWidget_student.item(row, column)
                if item:
                    row_data.append(item.text())
                else:
                    row_data.append('')
            # 打印选中行的内容
            table_id = row_data[0]
            # 假设 table_id 方法根据名称查询并返回对应的行，这里应该根据实际需求调整方法名和逻辑
            row = UserSqlUtil.search_by_name(table_id)
            if row:
                reply = QMessageBox.question(None, '确定吗', f'您确定要删除用户为：{table_id} 的所有数据吗？',
                                             QMessageBox.Yes | QMessageBox.No,
                                             QMessageBox.No)
                # 如果用户点击了"是"
                if reply == QMessageBox.Yes:
                    flag = UserSqlUtil.delete_by_name(table_id)
                    if flag:
                        QMessageBox.about(None, '提示', f'用户{table_id}删除成功,请重置表格数据查看')
                    else:
                        QMessageBox.about(None, '提示', f'用户{table_id}删除失败，请重试')
            else:
                QMessageBox.about(None, '提示', f'用户{table_id}不存在')
        else:
            QMessageBox.information(None, '提示', '请选择表格中的数据，再删除')

    def register_button_clicked(self):
        # 创建 Ui_Dialog 的实例
        dialog = ImgUi()
        # 创建一个 QDialog 实例，并使用 Ui_Dialog 来设置它的界面
        dialog_window = QDialog()
        dialog.setupUi(dialog_window)
        # 显示对话框窗口
        dialog_window.exec_()  # 使用 exec_() 来显示模态对话框


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    widgets = QtWidgets.QMainWindow()
    ui = TableUi()
    ui.setupUi(widgets)
    widgets.show()
    sys.exit(app.exec_())
